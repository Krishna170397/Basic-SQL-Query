-- Basic Joins
-- Retrieve all customer names along with their associated orders.
select c.customer_name,o.order_id,o.product_id,o.order_date,o.total_amount 
from customers c 
join orders o on c.customer_id = o.customer_id;

-- List all products and their prices from the Products table.
select product_name, price
from products;

-- Find the total amount for each order from the Orders table.
select order_id,total_amount
from orders;

-- Retrieve the campaign names and their budgets from the marketing_Campaigns table.
select campaign_name,budget
from marketing_campaigns;

-- WHERE Clause: Filter the rows from a table based on specified conditions.
-- Find all orders placed after 2024-01-01.
select order_id from orders 
where order_date > '2024-01-01';

-- Retrieve customers whose email contains gmail.com.
select customer_name from customers
where email like '%example.com';

-- List all campaigns that ended before 2024-10-01.
select campaign_id from campaign_results
where date < '2024-10-01';

-- Retrieve products that cost more than 12.
select product_name,price from products
where price > 12;

-- Order By: sort the results of an SQL query in ascending or descending order.
-- List all customers ordered by their names in ascending order.
select customer_name from customers 
order by customer_name ASC;

-- Retrieve orders sorted by order_date in descending order.
select order_id,order_date,total_amount from orders
order by order_date DESC;

-- Find campaigns sorted by their start_date.
select campaign_name,start_date from marketing_campaigns
order by start_date;

-- AGGREGATION Functions: Performs a calculation on a set of values, and returns a single value.
-- Find the total revenue generated from all orders.
SELECT sum(total_amount) as total_revenue
FROM orders;

-- Calculate the average price of products in the Products table.
SELECT avg(price) as average_price 
FROM products;

-- Retrieve the number of orders placed by each customer.
SELECT c.customer_id,c.customer_name, count(o.order_id) as number_of_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id,c.customer_name;

-- Find the total clicks and impressions for each campaign from the Campaign_Results table.
SELECT marketing_campaigns.campaign_name,marketing_campaigns.campaign_id,
count(campaign_results.clicks),count(campaign_results.impressions)
FROM campaign_results
JOIN marketing_campaigns ON marketing_campaigns.campaign_id = campaign_results.campaign_id
GROUP BY marketing_campaigns.campaign_name,marketing_campaigns.campaign_id;

-- GROUP BY Clause: Groups rows that have the same values into summary rows.
-- Find the total amount of orders grouped by customer_id.
SELECT customer_id,sum(total_amount) as total_amount
FROM orders
GROUP BY customer_id;

-- Retrieve the total clicks grouped by campaign_id.
SELECT campaign_id,sum(clicks) FROM campaign_results
GROUP BY campaign_id;

-- List the number of products in each category from the Products table.
SELECT category,count(product_name)
FROM products
GROUP BY category;

-- Find the total revenue generated by each product from the Orders table.
SELECT product_id,sum(total_amount) as total_revenue
FROM orders
GROUP BY product_id;


